# generated by datamodel-codegen:
#   filename:  path.json
#   timestamp: 2025-06-09T10:35:47+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import BaseModel, ConfigDict, RootModel
from models.grid import Grid


class Result(Enum):
    NoStart = 'NoStart'
    NoGoal = 'NoGoal'
    NoPath = 'NoPath'
    HasClearPath = 'HasClearPath'
    HasFailPath = 'HasFailPath'
    HasRestPath = 'HasRestPath'


class Vector(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    x: int
    y: int


class Path(RootModel[List[Vector]]):
    root: List[Vector]


class PathResult(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    path: Path
    result: Result
    nextGrid: Optional[Grid] = None


class Model(RootModel[PathResult]):
    root: PathResult
